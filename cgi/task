#!/usr/bin/perl

use strict;
use warnings;

eval { use cPanelUserConfig };

use base qw(Scribe::App);
use CGI::Ex::Die register => 1;
use CGI::Ex::Dump qw(debug);

our $NO_ADD_MSG;
__PACKAGE__->navigate;

sub name_module { 'scribe/task' }

sub url { shift->SUPER::url.'/cgi/task' }

sub main_hash_swap {
    my $self = shift;
    $self->cgix->location_bounce($self->board_url);
    return 0;
}


###-----------------------------------------------------------------###


sub add_hash_validation {
    my $self = shift;
    # TODO: Create validation here
    return { }
}

sub add_hash_swap {
    my $self = shift;
    my $crud = shift || 'add';

    my $default_weight = 0;
    if(my $scene_id = $self->form->{'scene_id'}) {
        my $sibling_tasks = $self->flat_search('Task', { scene_id => $scene_id }, { order_by => { -desc => [qw/weight/] } });
        $default_weight = $sibling_tasks->[0]->{'weight'} + 1 if $sibling_tasks && $sibling_tasks->[0];
    }

    my $url_theme = $self->url_theme;
    return {
        section        => ucfirst($crud).' Task',
        css_crud       => "$url_theme/$crud.css",
        characters     => $self->flat_search('Character', undef, { order_by => { -asc => [qw/name/] } }),
        labels         => $self->flat_search('Label',     undef, { order_by => { -asc => [qw/name/] } }),
        scenes         => $self->flat_search('Scene',     undef, { order_by => { -asc => [qw/weight/] } }),
        default_weight => $default_weight,
    }
}

sub add_finalize {
    my $self = shift;
    my %form = %{ $self->form };

    foreach my $col (qw(label_id character_id scene_id)) {
        delete $form{$col} if defined $form{$col} && $form{$col} eq '';
    }

    $self->add_record('Task', \%form);

    my $bounce_url = $self->board_url;
    if(my $scene_id = $form{'scene_id'}) {
        $bounce_url = $self->url_cgi."/scene?scene_id=$scene_id";
    }
    $self->cgix->location_bounce($bounce_url);
    return 0;
}


###-----------------------------------------------------------------###



